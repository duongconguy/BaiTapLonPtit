#include "UserManager.h"
#include "Hash.h"
#include <fstream>
#include <sstream>

bool UserManager::loadFromFile(const std::string& filename) {
    users.clear();
    std::ifstream fin(filename);
    if (!fin) return false;
    std::string line;
    while (std::getline(fin, line)) {
        if (!line.empty()) users.push_back(UserAccount::deserialize(line));
    }
    return true;
}

bool UserManager::saveToFile(const std::string& filename) {
    std::ofstream fout(filename);
    if (!fout) return false;
    for (const auto& user : users) {
        fout << user.serialize() << "\n";
    }
    return true;
}

bool UserManager::backup(const std::string& backupFile) {
    return saveToFile(backupFile);
}

UserAccount* UserManager::findUser(const std::string& username) {
    for (auto& user : users) {
        if (user.username == username) return &user;
    }
    return nullptr;
}

bool UserManager::registerUser(const UserAccount& user) {
    if (findUser(user.username)) return false;
    users.push_back(user);
    return true;
}

bool UserManager::login(const std::string& username, const std::string& password, UserAccount*& outUser) {
    UserAccount* user = findUser(username);
    if (!user) return false;
    if (user->hashedPassword == sha256(password)) {
        outUser = user;
        return true;
    }
    return false;
}

bool UserManager::changePassword(UserAccount& user, const std::string& newPassword) {
    user.hashedPassword = sha256(newPassword);
    user.isAutoGeneratedPassword = false;
    return true;
} 